{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class SharedService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.APIUrl = 'https://localhost:44382/api';\n    this.PhotoUrl = 'http://localhost:44382/Photos';\n  }\n  getDepList() {\n    return this.http.get(this.APIUrl + '/department');\n  }\n  addDepartment(val) {\n    return this.http.post(this.APIUrl + '/Department', val);\n  }\n  updateDepartment(val) {\n    return this.http.put(this.APIUrl + '/Department', val);\n  }\n  deleteDepartment(val) {\n    return this.http.delete(this.APIUrl + '/Department/' + val);\n  }\n  getEmpList() {\n    return this.http.get(this.APIUrl + '/Employee');\n  }\n  addEmployee(val) {\n    return this.http.post(this.APIUrl + '/Employee', val);\n  }\n  updateEmployee(val) {\n    return this.http.put(this.APIUrl + '/Employee', val);\n  }\n  deleteEmployee(val) {\n    return this.http.delete(this.APIUrl + '/Employee/' + val);\n  }\n  UploatPhoto(val) {\n    return this.http.post(this.APIUrl + 'Employee/SaveFile', val);\n  }\n  getAllDepartmentNames() {\n    return this.http.get(this.APIUrl + '/Employee/GetAllDepartmentNames');\n  }\n  loggedIn() {\n    console.log(!!localStorage.getItem('success'));\n    return !!localStorage.getItem('success');\n  }\n  // login(Username: string, Pass: string): Observable<object> {\n  //   const APIUrl = this.APIUrl + '/Account/Login';\n  //   const payload = { Username, Pass };\n  //   return this.http.post<object>(APIUrl, payload);\n  // }\n  login(Username, Pass) {\n    const loginData = {\n      Username: Username,\n      Pass: Pass\n    };\n    return this.http.post(this.APIUrl + '/Account/Login', loginData);\n  }\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['/login']);\n  }\n}\nSharedService.ɵfac = function SharedService_Factory(t) {\n  return new (t || SharedService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nSharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SharedService,\n  factory: SharedService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAF3C,WAAM,GAAG,6BAA6B;IACtC,aAAQ,GAAG,+BAA+B;EACY;EAE/DC,UAAU;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACC,MAAM,GAAG,aAAa,CAAC;EACxD;EAEAC,aAAa,CAACC,GAAQ;IACpB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACH,MAAM,GAAG,aAAa,EAAEE,GAAG,CAAC;EACzD;EAEAE,gBAAgB,CAACF,GAAQ;IACvB,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAC,IAAI,CAACL,MAAM,GAAG,aAAa,EAAEE,GAAG,CAAC;EACxD;EAEAI,gBAAgB,CAACJ,GAAQ;IACvB,OAAO,IAAI,CAACN,IAAI,CAACW,MAAM,CAAC,IAAI,CAACP,MAAM,GAAG,cAAc,GAAGE,GAAG,CAAC;EAC7D;EAEAM,UAAU;IACR,OAAO,IAAI,CAACZ,IAAI,CAACG,GAAG,CAAM,IAAI,CAACC,MAAM,GAAG,WAAW,CAAC;EACtD;EAEAS,WAAW,CAACP,GAAQ;IAClB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACH,MAAM,GAAG,WAAW,EAAEE,GAAG,CAAC;EACvD;EAEAQ,cAAc,CAACR,GAAQ;IACrB,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAC,IAAI,CAACL,MAAM,GAAG,WAAW,EAAEE,GAAG,CAAC;EACtD;EAEAS,cAAc,CAACT,GAAQ;IACrB,OAAO,IAAI,CAACN,IAAI,CAACW,MAAM,CAAC,IAAI,CAACP,MAAM,GAAG,YAAY,GAAGE,GAAG,CAAC;EAC3D;EAEAU,WAAW,CAACV,GAAQ;IAClB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACH,MAAM,GAAG,mBAAmB,EAAEE,GAAG,CAAC;EAC/D;EAEAW,qBAAqB;IACnB,OAAO,IAAI,CAACjB,IAAI,CAACG,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG,iCAAiC,CAChD;EACH;EAEAc,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC9C,OAAO,CAAC,CAACD,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC1C;EAEA;EACA;EACA;EACA;EACA;EAEAC,KAAK,CAACC,QAAgB,EAAEC,IAAY;IAClC,MAAMC,SAAS,GAAG;MAChBF,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAAEA;KACP;IAED,OAAO,IAAI,CAACzB,IAAI,CAACO,IAAI,CAAM,IAAI,CAACH,MAAM,GAAG,gBAAgB,EAAEsB,SAAS,CAAC;EACvE;EAEAC,MAAM;IACJN,YAAY,CAACO,KAAK,EAAE;IACpB,IAAI,CAAC3B,MAAM,CAAC4B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;AAvEW/B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAgC,SAAbhC,aAAa;EAAAiC,YAFZ;AAAM","names":["SharedService","constructor","http","router","getDepList","get","APIUrl","addDepartment","val","post","updateDepartment","put","deleteDepartment","delete","getEmpList","addEmployee","updateEmployee","deleteEmployee","UploatPhoto","getAllDepartmentNames","loggedIn","console","log","localStorage","getItem","login","Username","Pass","loginData","logout","clear","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pc\\Desktop\\review\\ui\\angular\\src\\app\\shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SharedService {\n  [x: string]: any;\n  readonly APIUrl = 'https://localhost:44382/api';\n  readonly PhotoUrl = 'http://localhost:44382/Photos';\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getDepList(): Observable<any[]> {\n    return this.http.get<any>(this.APIUrl + '/department');\n  }\n\n  addDepartment(val: any) {\n    return this.http.post(this.APIUrl + '/Department', val);\n  }\n\n  updateDepartment(val: any) {\n    return this.http.put(this.APIUrl + '/Department', val);\n  }\n\n  deleteDepartment(val: any) {\n    return this.http.delete(this.APIUrl + '/Department/' + val);\n  }\n\n  getEmpList(): Observable<any[]> {\n    return this.http.get<any>(this.APIUrl + '/Employee');\n  }\n\n  addEmployee(val: any) {\n    return this.http.post(this.APIUrl + '/Employee', val);\n  }\n\n  updateEmployee(val: any) {\n    return this.http.put(this.APIUrl + '/Employee', val);\n  }\n\n  deleteEmployee(val: any) {\n    return this.http.delete(this.APIUrl + '/Employee/' + val);\n  }\n\n  UploatPhoto(val: any) {\n    return this.http.post(this.APIUrl + 'Employee/SaveFile', val);\n  }\n\n  getAllDepartmentNames(): Observable<any[]> {\n    return this.http.get<any[]>(\n      this.APIUrl + '/Employee/GetAllDepartmentNames'\n    );\n  }\n\n  loggedIn() {\n    console.log(!!localStorage.getItem('success'));\n    return !!localStorage.getItem('success');\n  }\n\n  // login(Username: string, Pass: string): Observable<object> {\n  //   const APIUrl = this.APIUrl + '/Account/Login';\n  //   const payload = { Username, Pass };\n  //   return this.http.post<object>(APIUrl, payload);\n  // }\n\n  login(Username: string, Pass: string): Observable<any> {\n    const loginData = {\n      Username: Username,\n      Pass: Pass,\n    };\n\n    return this.http.post<any>(this.APIUrl + '/Account/Login', loginData);\n  }\n\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['/login']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}